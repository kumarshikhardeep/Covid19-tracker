{"ast":null,"code":"var _jsxFileName = \"/home/shikhar/inshort/COVID-19-Details/src/App.js\";\nimport React, { Component } from 'react';\nimport { Cards, Chart, Statistics, AutoComplete, Loader } from './components';\nimport styles from './App.module.css';\nimport { getCovidData } from './api';\nimport image from './images/image.png';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {},\n      country: \"India\",\n      global: {},\n      stateMap: {},\n      states: [],\n      selectedSno: \"1\"\n    };\n\n    this.handleChange = (event, value) => {\n      this.setState({\n        selectedSno: value.sno\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const fetchedData = await getCovidData();\n    this.setState({\n      data: fetchedData\n    });\n    this.setState({\n      global: fetchedData.pop()\n    });\n    let tempMap = {};\n    let tempStates = [];\n    fetchedData.forEach(state => {\n      if (!tempMap[state.sno]) {\n        tempMap[state.sno] = state;\n        if (state.state_name) tempStates.push({\n          label: state.state_name,\n          sno: state.sno\n        });\n      }\n    });\n    this.setState({\n      stateMap: tempMap,\n      states: tempStates\n    });\n  }\n\n  render() {\n    const {\n      data,\n      global,\n      stateMap,\n      states,\n      selectedSno\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: image,\n      alt: \"CoronaVirus\",\n      className: styles.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }), console.log(global, stateMap[\"0\"], states), /*#__PURE__*/React.createElement(Cards, {\n      data: {\n        confirmed: global.new_positive,\n        recovered: global.new_cured,\n        deaths: global.new_death\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(AutoComplete, {\n      data: states,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Statistics, {\n      data: stateMap[selectedSno],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/shikhar/inshort/COVID-19-Details/src/App.js"],"names":["React","Component","Cards","Chart","Statistics","AutoComplete","Loader","styles","getCovidData","image","App","state","data","country","global","stateMap","states","selectedSno","handleChange","event","value","setState","sno","componentDidMount","fetchedData","pop","tempMap","tempStates","forEach","state_name","push","label","render","container","console","log","confirmed","new_positive","recovered","new_cured","deaths","new_death"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Cards, Chart, Statistics, AutoComplete, Loader } from './components';\nimport styles from './App.module.css';\nimport { getCovidData } from './api';\nimport image from './images/image.png';\nclass App extends Component {\n\n    state = {\n        data: {},\n        country: \"India\",\n        global: {},\n        stateMap: {},\n        states: [],\n        selectedSno: \"1\"\n    }\n\n    async componentDidMount() {\n        const fetchedData = await getCovidData();\n        this.setState({ data: fetchedData });\n        this.setState({ global: fetchedData.pop() })\n        let tempMap = {}\n        let tempStates = []\n        fetchedData.forEach(state => {\n            if (!tempMap[state.sno]) {\n                tempMap[state.sno] = state\n                if (state.state_name)\n                    tempStates.push({ label: state.state_name, sno: state.sno });\n            }\n        })\n        this.setState({ stateMap: tempMap, states: tempStates })\n    }\n\n    handleChange = (event, value) => {\n        this.setState({ selectedSno: value.sno })\n    }\n\n    render() {\n        const { data, global, stateMap, states, selectedSno } = this.state;\n        return (\n\n            <div className={styles.container}>\n                <img src={image} alt=\"CoronaVirus\" className={styles.image} />\n                {console.log(global, stateMap[\"0\"], states)}\n                <Cards data={{ confirmed: global.new_positive, recovered: global.new_cured, deaths: global.new_death }} />\n                <AutoComplete data={states} onChange={this.handleChange} />\n                <Statistics data={stateMap[selectedSno]} />\n            </div>\n        )\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}