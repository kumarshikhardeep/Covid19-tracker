{"ast":null,"code":"var _jsxFileName = \"/home/shikhar/inshort/COVID-19-Details/src/components/CountryPicker/CountryPicker.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport styles from './CountryPicker.module.css';\nimport { getCovidData } from '../../api';\nimport Accordion from '../Accordion/Accordion';\nimport Select from '../AutoComplete';\nimport { TempleBuddhistOutlined } from '@mui/icons-material';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\n\nconst CountryPicker = ({\n  handleCountryChange\n}) => {\n  const [stateMap, setStateMap] = useState({});\n  const [states, setStates] = useState([]);\n  const [selectedSno, setSelectedSno] = useState('');\n  useEffect(() => {\n    const getStateData = async () => {\n      let data = await getCovidData();\n      let tempMap = {};\n      let tempStates = [{\n        label: \"India\",\n        sno: \"37\"\n      }];\n      data.forEach(state => {\n        if (!tempMap[state.sno]) {\n          tempMap[state.sno] = state;\n          if (state.state_name) tempStates.push({\n            label: state.state_name,\n            sno: state.sno\n          });\n        }\n      });\n      setStateMap(tempMap);\n      setStates(tempStates);\n    };\n\n    getStateData();\n  }, []);\n\n  const handleChange = (event, value) => {\n    setSelectedSno(value.sno);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Select, {\n    data: states,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    sx: {\n      flexGrow: 1\n    },\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justifyContent: \"center\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    key: value,\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    sx: {\n      height: 140,\n      width: 100,\n      backgroundColor: theme => theme.palette.mode === 'dark' ? '#1A2027' : '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  })))))) // <FormControl className={styles.formControl}>\n  //     <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n  //         <option value=\"\">Global</option>\n  //         {stateData.map((state, id) => <option value={state.state_bane} key={id}>{state.state_name}</option>)}\n  //     </NativeSelect>\n  // </FormControl>\n  // <Accordion data={stateData} />\n  ;\n};\n\nexport default CountryPicker;","map":{"version":3,"sources":["/home/shikhar/inshort/COVID-19-Details/src/components/CountryPicker/CountryPicker.jsx"],"names":["React","useState","useEffect","NativeSelect","FormControl","styles","getCovidData","Accordion","Select","TempleBuddhistOutlined","Grid","Paper","CountryPicker","handleCountryChange","stateMap","setStateMap","states","setStates","selectedSno","setSelectedSno","getStateData","data","tempMap","tempStates","label","sno","forEach","state","state_name","push","handleChange","event","value","flexGrow","height","width","backgroundColor","theme","palette","mode"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport styles from './CountryPicker.module.css';\nimport { getCovidData } from '../../api';\nimport Accordion from '../Accordion/Accordion'\nimport Select from '../AutoComplete'\nimport { TempleBuddhistOutlined } from '@mui/icons-material';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\n\nconst CountryPicker = ({ handleCountryChange }) => {\n    const [stateMap, setStateMap] = useState({});\n    const [states, setStates] = useState([]);\n    const [selectedSno, setSelectedSno] = useState('');\n\n    useEffect(() => {\n        const getStateData = async () => {\n            let data = await getCovidData();\n            let tempMap = {}\n            let tempStates = [{ label: \"India\", sno: \"37\" }]\n            data.forEach(state => {\n                if (!tempMap[state.sno]) {\n                    tempMap[state.sno] = state\n                    if (state.state_name)\n                        tempStates.push({ label: state.state_name, sno: state.sno })\n                }\n            })\n            setStateMap(tempMap);\n            setStates(tempStates);\n        }\n        getStateData();\n    }, [])\n\n\n    const handleChange = (event, value) => {\n        setSelectedSno(value.sno)\n    }\n\n    return (\n        <>\n            <Select data={states} onChange={handleChange} />\n            <Grid sx={{ flexGrow: 1 }} container spacing={2}>\n                <Grid item xs={12}>\n                    <Grid container justifyContent=\"center\" spacing={2}>\n                        <Grid key={value} item>\n                            <Paper\n                                sx={{\n                                    height: 140,\n                                    width: 100,\n                                    backgroundColor: (theme) =>\n                                        theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n                                }}\n                            />\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n\n            {/* {stateMap} */}\n\n        </>\n        // <FormControl className={styles.formControl}>\n        //     <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n        //         <option value=\"\">Global</option>\n        //         {stateData.map((state, id) => <option value={state.state_bane} key={id}>{state.state_name}</option>)}\n        //     </NativeSelect>\n        // </FormControl>\n        // <Accordion data={stateData} />\n    )\n\n}\n\nexport default CountryPicker;\n"]},"metadata":{},"sourceType":"module"}