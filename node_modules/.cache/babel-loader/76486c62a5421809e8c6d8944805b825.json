{"ast":null,"code":"var _jsxFileName = \"/home/shikhar/inshort/COVID-19-Details/src/App.js\";\nimport React, { Component } from 'react';\nimport { Cards, Chart, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport { getCovidData } from './api';\nimport image from './images/image.png';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {},\n      country: \"India\",\n      global: {},\n      stateMap: {},\n      states: []\n    };\n  }\n\n  async componentDidMount() {\n    const fetchedData = await getCovidData();\n    this.setState({\n      data: fetchedData\n    });\n    this.setState({\n      global: fetchedData.pop()\n    });\n    let tempMap = {};\n    let tempStates = [];\n    fetchedData.forEach(state => {\n      if (!tempMap[state.sno]) {\n        tempMap[state.sno] = state;\n        if (state.state_name) tempStates.push({\n          label: state.state_name,\n          sno: state.sno\n        });\n      }\n    });\n    this.setState({\n      stateMap: tempMap,\n      states: tempStates\n    });\n  } // handleStateChange = (state) => {\n  //     const fetchedData = await fetchData(country);\n  //     this.setState({ data: fetchedData, country: country });\n  // }\n\n\n  render() {\n    const {\n      data,\n      global\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: image,\n      alt: \"CoronaVirus\",\n      className: styles.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }), console.log(global), /*#__PURE__*/React.createElement(Cards, {\n      data: {\n        confirmed: global.new_positive,\n        recovered: global.new_cured,\n        death: global.new_death\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/shikhar/inshort/COVID-19-Details/src/App.js"],"names":["React","Component","Cards","Chart","CountryPicker","styles","getCovidData","image","App","state","data","country","global","stateMap","states","componentDidMount","fetchedData","setState","pop","tempMap","tempStates","forEach","sno","state_name","push","label","render","container","console","log","confirmed","new_positive","recovered","new_cured","death","new_death"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,aAAvB,QAA4C,cAA5C;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,YAAT,QAA6B,OAA7B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AACA,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAExBQ,KAFwB,GAEhB;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,OAAO,EAAE,OAFL;AAGJC,MAAAA,MAAM,EAAE,EAHJ;AAIJC,MAAAA,QAAQ,EAAE,EAJN;AAKJC,MAAAA,MAAM,EAAE;AALJ,KAFgB;AAAA;;AAUxB,QAAMC,iBAAN,GAA0B;AACtB,UAAMC,WAAW,GAAG,MAAMV,YAAY,EAAtC;AACA,SAAKW,QAAL,CAAc;AAAEP,MAAAA,IAAI,EAAEM;AAAR,KAAd;AACA,SAAKC,QAAL,CAAc;AAAEL,MAAAA,MAAM,EAAEI,WAAW,CAACE,GAAZ;AAAV,KAAd;AACA,QAAIC,OAAO,GAAG,EAAd;AACA,QAAIC,UAAU,GAAG,EAAjB;AACAJ,IAAAA,WAAW,CAACK,OAAZ,CAAoBZ,KAAK,IAAI;AACzB,UAAI,CAACU,OAAO,CAACV,KAAK,CAACa,GAAP,CAAZ,EAAyB;AACrBH,QAAAA,OAAO,CAACV,KAAK,CAACa,GAAP,CAAP,GAAqBb,KAArB;AACA,YAAIA,KAAK,CAACc,UAAV,EACIH,UAAU,CAACI,IAAX,CAAgB;AAAEC,UAAAA,KAAK,EAAEhB,KAAK,CAACc,UAAf;AAA2BD,UAAAA,GAAG,EAAEb,KAAK,CAACa;AAAtC,SAAhB;AACP;AACJ,KAND;AAOA,SAAKL,QAAL,CAAc;AAAEJ,MAAAA,QAAQ,EAAEM,OAAZ;AAAqBL,MAAAA,MAAM,EAAEM;AAA7B,KAAd;AACH,GAxBuB,CA0BxB;AACA;AACA;AACA;;;AAEAM,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEhB,MAAAA,IAAF;AAAQE,MAAAA;AAAR,QAAmB,KAAKH,KAA9B;AACA,wBACI;AAAK,MAAA,SAAS,EAAEJ,MAAM,CAACsB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,GAAG,EAAEpB,KAAV;AAAiB,MAAA,GAAG,EAAC,aAArB;AAAmC,MAAA,SAAS,EAAEF,MAAM,CAACE,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEKqB,OAAO,CAACC,GAAR,CAAYjB,MAAZ,CAFL,eAGI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE;AAAEkB,QAAAA,SAAS,EAAElB,MAAM,CAACmB,YAApB;AAAkCC,QAAAA,SAAS,EAAEpB,MAAM,CAACqB,SAApD;AAA+DC,QAAAA,KAAK,EAAEtB,MAAM,CAACuB;AAA7E,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAUH;;AA3CuB;;AA8C5B,eAAe3B,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Cards, Chart, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport { getCovidData } from './api';\nimport image from './images/image.png';\nclass App extends Component {\n\n    state = {\n        data: {},\n        country: \"India\",\n        global: {},\n        stateMap: {},\n        states: []\n    }\n\n    async componentDidMount() {\n        const fetchedData = await getCovidData();\n        this.setState({ data: fetchedData });\n        this.setState({ global: fetchedData.pop() })\n        let tempMap = {}\n        let tempStates = []\n        fetchedData.forEach(state => {\n            if (!tempMap[state.sno]) {\n                tempMap[state.sno] = state\n                if (state.state_name)\n                    tempStates.push({ label: state.state_name, sno: state.sno });\n            }\n        })\n        this.setState({ stateMap: tempMap, states: tempStates })\n    }\n\n    // handleStateChange = (state) => {\n    //     const fetchedData = await fetchData(country);\n    //     this.setState({ data: fetchedData, country: country });\n    // }\n\n    render() {\n        const { data, global } = this.state;\n        return (\n            <div className={styles.container}>\n                <img src={image} alt=\"CoronaVirus\" className={styles.image} />\n                {console.log(global)}\n                <Cards data={{ confirmed: global.new_positive, recovered: global.new_cured, death: global.new_death }} />\n                {/* <CountryPicker handleCountryChange={this.handleCountryChange} /> */}\n\n                {/* <Chart data={data} country={country} /> */}\n            </div>\n        )\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}