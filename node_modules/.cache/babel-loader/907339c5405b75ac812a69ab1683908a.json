{"ast":null,"code":"var _jsxFileName = \"/home/shikhar/inshort/COVID-19-Details/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() => {\n    const fetchAPI = async () => {// setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, []);\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => new Date(date).toDateString()),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255,0,0,0.7)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 14\n    }\n  }) : null;\n  const barChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Positive', 'Cured', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgba(255, 0, 0, 0.7)', 'rgba(0, 255, 0, 0.7)', 'rgba(0, 0, 0, 0.7)'],\n        data: [confirmed, recovered, deaths]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current State in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, barChart, \"}\");\n};\n\nexport default Chart;","map":{"version":3,"sources":["/home/shikhar/inshort/COVID-19-Details/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","Date","toDateString","datasets","label","borderColor","fill","backgroundColor","barChart","legend","display","title","text","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,SAAb;AAAwBC,IAAAA;AAAxB,GAAR;AAA0CC,EAAAA;AAA1C,CAAD,KAAyD;AACnE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,QAAQ,GAAG,YAAY,CACzB;AACH,KAFD;;AAGAA,IAAAA,QAAQ;AACX,GALQ,EAKN,EALM,CAAT;AAOA,QAAMC,SAAS,GACXH,SAAS,CAACI,MAAV,gBACK,oBAAC,IAAD;AACG,IAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAAEL,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAc,IAAIC,IAAJ,CAASD,IAAT,EAAeE,YAAf,EAA5B,CADN;AAEFC,MAAAA,QAAQ,EAAE,CAAC;AACPf,QAAAA,IAAI,EAAEK,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEV,UAAAA;AAAF,SAAD,KAAmBA,SAAjC,CADC;AAEPe,QAAAA,KAAK,EAAE,UAFA;AAGPC,QAAAA,WAAW,EAAE,SAHN;AAIPC,QAAAA,IAAI,EAAE;AAJC,OAAD,EAKP;AACClB,QAAAA,IAAI,EAAEK,SAAS,CAACM,GAAV,CAAc,CAAC;AAAER,UAAAA;AAAF,SAAD,KAAgBA,MAA9B,CADP;AAECa,QAAAA,KAAK,EAAE,QAFR;AAGCC,QAAAA,WAAW,EAAE,KAHd;AAICE,QAAAA,eAAe,EAAE,mBAJlB;AAKCD,QAAAA,IAAI,EAAE;AALP,OALO;AAFR,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,GAiBU,IAlBd;AAqBA,QAAME,QAAQ,GACVnB,SAAS,gBACL,oBAAC,GAAD;AACI,IAAA,IAAI,EAAE;AACFS,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,OAAb,EAAsB,QAAtB,CADN;AAEFK,MAAAA,QAAQ,EAAE,CAAC;AACPC,QAAAA,KAAK,EAAE,QADA;AAEPG,QAAAA,eAAe,EAAE,CAAC,sBAAD,EAAyB,sBAAzB,EAAiD,oBAAjD,CAFV;AAGPnB,QAAAA,IAAI,EAAE,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,MAAvB;AAHC,OAAD;AAFR,KADV;AASI,IAAA,OAAO,EAAE;AACLkB,MAAAA,MAAM,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OADH;AAELC,MAAAA,KAAK,EAAE;AAAED,QAAAA,OAAO,EAAE,IAAX;AAAiBE,QAAAA,IAAI,EAAG,oBAAmBpB,OAAQ;AAAnD;AAFF,KATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAeL,IAhBR;AAoBA,sBACI;AAAK,IAAA,SAAS,EAAEN,MAAM,CAAC2B,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,QADL,MADJ;AAOH,CA1DD;;AA4DA,eAAerB,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n    const [dailyData, setDailyData] = useState({});\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            // setDailyData(await fetchDailyData());\n        }\n        fetchAPI();\n    }, []);\n\n    const lineChart = (\n        dailyData.length ?\n            (<Line\n                data={{\n                    labels: dailyData.map(({ date }) => new Date(date).toDateString()),\n                    datasets: [{\n                        data: dailyData.map(({ confirmed }) => confirmed),\n                        label: 'Infected',\n                        borderColor: '#3333ff',\n                        fill: true\n                    }, {\n                        data: dailyData.map(({ deaths }) => deaths),\n                        label: 'Deaths',\n                        borderColor: 'red',\n                        backgroundColor: 'rgba(255,0,0,0.7)',\n                        fill: true\n                    }],\n                }}\n            />) : null\n    )\n\n    const barChart = (\n        confirmed ? (\n            <Bar\n                data={{\n                    labels: ['Positive', 'Cured', 'Deaths'],\n                    datasets: [{\n                        label: 'People',\n                        backgroundColor: ['rgba(255, 0, 0, 0.7)', 'rgba(0, 255, 0, 0.7)', 'rgba(0, 0, 0, 0.7)'],\n                        data: [confirmed, recovered, deaths]\n                    }]\n                }}\n                options={{\n                    legend: { display: false },\n                    title: { display: true, text: `Current State in ${country}` }\n                }}\n            />\n        ) : null\n    )\n\n\n    return (\n        <div className={styles.container}>\n            {barChart}}\n        </div>\n    )\n\n\n}\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}