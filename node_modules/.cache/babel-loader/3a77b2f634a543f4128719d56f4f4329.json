{"ast":null,"code":"var _jsxFileName = \"/home/shikhar/inshort/COVID-19-Details/src/components/Statistics/Statistics.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport styles from './Statistics.module.css';\nimport Grid from '@mui/material/Grid';\nimport Card from '@material-ui/core/Card';\nimport Chart from '../Chart/Chart';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport MuiTableHead from \"@material-ui/core/TableHead\";\nimport { Container, Typography } from '@material-ui/core';\nimport cx from 'classnames';\nconst useStyles = makeStyles({\n  table: {\n    width: \"100%\"\n  }\n});\nconst TableHead = withStyles(theme => ({\n  root: {\n    backgroundColor: \"orange\"\n  }\n}))(MuiTableHead);\nconst TableHeaderCell = withStyles(theme => ({\n  root: {\n    color: \"white\"\n  }\n}))(TableCell);\n\nconst CountryPicker = ({\n  data\n}) => {\n  const classes = useStyles();\n  const [positives, setPositives] = useState((data === null || data === void 0 ? void 0 : data.new_positive) - (data === null || data === void 0 ? void 0 : data.positive));\n  const [cured, setCured] = useState((data === null || data === void 0 ? void 0 : data.new_cured) - (data === null || data === void 0 ? void 0 : data.cured));\n  const [deaths, setDeaths] = useState((data === null || data === void 0 ? void 0 : data.new_death) - (data === null || data === void 0 ? void 0 : data.death));\n  useEffect(() => {\n    setPositives((data === null || data === void 0 ? void 0 : data.new_positive) - (data === null || data === void 0 ? void 0 : data.positive));\n    setCured((data === null || data === void 0 ? void 0 : data.new_cured) - (data === null || data === void 0 ? void 0 : data.cured));\n    setDeaths((data === null || data === void 0 ? void 0 : data.new_death) - (data === null || data === void 0 ? void 0 : data.death));\n  }, [data]);\n  return (\n    /*#__PURE__*/\n    // <Container className={styles.container}>\n    //     <Grid container spacing={3} justify=\"center\">\n    //         <Grid item component={Card} xs={12} className={cx(styles.card, styles.infected)} >\n    //             <Chart data={{ confirmed: data?.new_positive, recovered: data?.new_cured, deaths: data?.new_death }} country={data?.state_name} />\n    //         </Grid>\n    //         <Grid item component={Card} xs={12} className={cx(styles.card, styles.infected)} >\n    //             {/* <div className=\"App\"> */}\n    //             {/* <div className='table-container'> */}\n    //             <TableContainer>\n    //                 <Table className={classes.table} >\n    //                     <TableHead>\n    //                         <TableRow>\n    //                             <TableHeaderCell>Changes Since Yesterday</TableHeaderCell>\n    //                             <TableHeaderCell>Count</TableHeaderCell>\n    //                         </TableRow>\n    //                     </TableHead>\n    //                     <TableRow className='row-style'>\n    //                         <TableCell variant=\"head\">Positives</TableCell>\n    //                         <TableCell>\n    //                             <Typography style={{ color: positives < 0 ? \"green\" : \"red\", fontWeight: \"bold\" }}>{Math.abs(positives)}</Typography>\n    //                         </TableCell>\n    //                     </TableRow>\n    //                     <TableRow className='row-style'>\n    //                         <TableCell variant=\"head\">Cured</TableCell>\n    //                         <TableCell>\n    //                             <Typography style={{ color: cured >= 0 ? \"green\" : \"red\", fontWeight: \"bold\" }}>{Math.abs(cured)}</Typography>\n    //                         </TableCell>\n    //                     </TableRow>\n    //                     <TableRow className='row-style'>\n    //                         <TableCell variant=\"head\">Deaths</TableCell>\n    //                         <TableCell>\n    //                             <Typography style={{ color: deaths <= 0 ? \"green\" : \"red\", fontWeight: \"bold\" }}>{Math.abs(deaths)}</Typography>\n    //                         </TableCell>\n    //                     </TableRow>\n    //                 </Table>\n    //             </TableContainer>\n    //             {/* </div> */}\n    //             {/* </div> */}\n    //         </Grid>\n    //     </Grid>\n    // </Container >\n    React.createElement(\"div\", {\n      className: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      component: Card,\n      xs: 12,\n      md: 3,\n      className: cx(styles.card, styles.infected),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      data: {\n        confirmed: data === null || data === void 0 ? void 0 : data.new_positive,\n        recovered: data === null || data === void 0 ? void 0 : data.new_cured,\n        deaths: data === null || data === void 0 ? void 0 : data.new_death\n      },\n      country: data === null || data === void 0 ? void 0 : data.state_name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      component: Card,\n      xs: 12,\n      md: 3,\n      className: cx(styles.card, styles.recovered),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      className: classes.table,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TableHeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 41\n      }\n    }, \"Changes Since Yesterday\"), /*#__PURE__*/React.createElement(TableHeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 41\n      }\n    }, \"Count\"))), /*#__PURE__*/React.createElement(TableRow, {\n      className: \"row-style\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      variant: \"head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 37\n      }\n    }, \"Positives\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      style: {\n        color: positives < 0 ? \"green\" : \"red\",\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 41\n      }\n    }, Math.abs(positives)))), /*#__PURE__*/React.createElement(TableRow, {\n      className: \"row-style\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      variant: \"head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 37\n      }\n    }, \"Cured\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      style: {\n        color: cured >= 0 ? \"green\" : \"red\",\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 41\n      }\n    }, Math.abs(cured)))), /*#__PURE__*/React.createElement(TableRow, {\n      className: \"row-style\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      variant: \"head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 37\n      }\n    }, \"Deaths\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      style: {\n        color: deaths <= 0 ? \"green\" : \"red\",\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 41\n      }\n    }, Math.abs(deaths))))))))))\n  );\n};\n\nexport default CountryPicker;","map":{"version":3,"sources":["/home/shikhar/inshort/COVID-19-Details/src/components/Statistics/Statistics.jsx"],"names":["React","useEffect","useState","styles","Grid","Card","Chart","Table","TableCell","TableRow","makeStyles","withStyles","TableContainer","MuiTableHead","Container","Typography","cx","useStyles","table","width","TableHead","theme","root","backgroundColor","TableHeaderCell","color","CountryPicker","data","classes","positives","setPositives","new_positive","positive","cured","setCured","new_cured","deaths","setDeaths","new_death","death","container","card","infected","confirmed","recovered","state_name","fontWeight","Math","abs"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styles from './Statistics.module.css';\nimport Grid from '@mui/material/Grid';\nimport Card from '@material-ui/core/Card'\nimport Chart from '../Chart/Chart'\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport MuiTableHead from \"@material-ui/core/TableHead\";\nimport { Container, Typography } from '@material-ui/core';\nimport cx from 'classnames';\n\nconst useStyles = makeStyles({\n    table: {\n        width: \"100%\",\n    },\n});\nconst TableHead = withStyles((theme) => ({\n    root: {\n        backgroundColor: \"orange\"\n    }\n}))(MuiTableHead);\n\nconst TableHeaderCell = withStyles((theme) => ({\n    root: {\n        color: \"white\"\n    }\n}))(TableCell);\n\nconst CountryPicker = ({ data }) => {\n\n    const classes = useStyles();\n    const [positives, setPositives] = useState(data?.new_positive - data?.positive);\n    const [cured, setCured] = useState(data?.new_cured - data?.cured);\n    const [deaths, setDeaths] = useState(data?.new_death - data?.death);\n\n    useEffect(() => {\n        setPositives(data?.new_positive - data?.positive);\n        setCured(data?.new_cured - data?.cured);\n        setDeaths(data?.new_death - data?.death)\n    }, [data])\n    return (\n        // <Container className={styles.container}>\n        //     <Grid container spacing={3} justify=\"center\">\n        //         <Grid item component={Card} xs={12} className={cx(styles.card, styles.infected)} >\n        //             <Chart data={{ confirmed: data?.new_positive, recovered: data?.new_cured, deaths: data?.new_death }} country={data?.state_name} />\n        //         </Grid>\n        //         <Grid item component={Card} xs={12} className={cx(styles.card, styles.infected)} >\n        //             {/* <div className=\"App\"> */}\n        //             {/* <div className='table-container'> */}\n        //             <TableContainer>\n        //                 <Table className={classes.table} >\n        //                     <TableHead>\n        //                         <TableRow>\n        //                             <TableHeaderCell>Changes Since Yesterday</TableHeaderCell>\n        //                             <TableHeaderCell>Count</TableHeaderCell>\n        //                         </TableRow>\n        //                     </TableHead>\n        //                     <TableRow className='row-style'>\n        //                         <TableCell variant=\"head\">Positives</TableCell>\n        //                         <TableCell>\n        //                             <Typography style={{ color: positives < 0 ? \"green\" : \"red\", fontWeight: \"bold\" }}>{Math.abs(positives)}</Typography>\n        //                         </TableCell>\n        //                     </TableRow>\n        //                     <TableRow className='row-style'>\n        //                         <TableCell variant=\"head\">Cured</TableCell>\n        //                         <TableCell>\n        //                             <Typography style={{ color: cured >= 0 ? \"green\" : \"red\", fontWeight: \"bold\" }}>{Math.abs(cured)}</Typography>\n        //                         </TableCell>\n        //                     </TableRow>\n        //                     <TableRow className='row-style'>\n        //                         <TableCell variant=\"head\">Deaths</TableCell>\n        //                         <TableCell>\n        //                             <Typography style={{ color: deaths <= 0 ? \"green\" : \"red\", fontWeight: \"bold\" }}>{Math.abs(deaths)}</Typography>\n        //                         </TableCell>\n        //                     </TableRow>\n        //                 </Table>\n        //             </TableContainer>\n        //             {/* </div> */}\n        //             {/* </div> */}\n        //         </Grid>\n        //     </Grid>\n        // </Container >\n\n\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Chart data={{ confirmed: data?.new_positive, recovered: data?.new_cured, deaths: data?.new_death }} country={data?.state_name} />\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <TableContainer>\n                            <Table className={classes.table} >\n                                <TableHead>\n                                    <TableRow>\n                                        <TableHeaderCell>Changes Since Yesterday</TableHeaderCell>\n                                        <TableHeaderCell>Count</TableHeaderCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableRow className='row-style'>\n                                    <TableCell variant=\"head\">Positives</TableCell>\n                                    <TableCell>\n                                        <Typography style={{ color: positives < 0 ? \"green\" : \"red\", fontWeight: \"bold\" }}>{Math.abs(positives)}</Typography>\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow className='row-style'>\n                                    <TableCell variant=\"head\">Cured</TableCell>\n                                    <TableCell>\n                                        <Typography style={{ color: cured >= 0 ? \"green\" : \"red\", fontWeight: \"bold\" }}>{Math.abs(cured)}</Typography>\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow className='row-style'>\n                                    <TableCell variant=\"head\">Deaths</TableCell>\n                                    <TableCell>\n                                        <Typography style={{ color: deaths <= 0 ? \"green\" : \"red\", fontWeight: \"bold\" }}>{Math.abs(deaths)}</Typography>\n                                    </TableCell>\n                                </TableRow>\n                            </Table>\n                        </TableContainer>\n                    </CardContent>\n                </Grid>\n\n\n            </Grid>\n        </div>)\n\n\n}\n\nexport default CountryPicker;\n"]},"metadata":{},"sourceType":"module"}